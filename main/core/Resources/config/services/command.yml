services:
    _defaults:
        autowire: false
        autoconfigure: false

    # API

    Claroline\CoreBundle\Command\API\ImportCsvCommand:
        arguments:
            - '%claroline.param.import_log_dir%'
            - '@claroline.manager.user_manager'
            - '@security.token_storage'
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@claroline.manager.api_manager'
        tags:
            - { name: 'console.command', command: 'claroline:api:load' }

    # Database Integrity

    Claroline\CoreBundle\Command\DatabaseIntegrity\DirectoryIntegrityCommand:
        arguments:
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@Claroline\CoreBundle\Manager\ResourceManager'
        tags:
            - { name: 'console.command', command: 'claroline:directory:check' }

    Claroline\CoreBundle\Command\DatabaseIntegrity\PersonalWorkspaceIntegrityCheckerCommand:
        arguments:
            - '@claroline.manager.user_manager'
            - '@doctrine.dbal.default_connection'
        tags:
            - { name: 'console.command', command: 'claroline:personal_ws:check' }

    Claroline\CoreBundle\Command\DatabaseIntegrity\ResourceMaskDecoderIntegrityCheckerCommand:
        arguments:
            - '@claroline.manager.mask_manager'
        tags:
            - { name: 'console.command', command: 'claroline:resource_mask_decoder:check' }

    Claroline\CoreBundle\Command\DatabaseIntegrity\ResourceRightsIntegrityCommand:
        arguments:
            - '@doctrine.dbal.default_connection'
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@claroline.manager.rights_manager'
        tags:
            - { name: 'console.command', command: 'claroline:resource_rights:check' }

    Claroline\CoreBundle\Command\DatabaseIntegrity\ResourceWorkspaceIntegrityCheckerCommand:
        arguments:
            - '@claroline.manager.resource_manager'
        tags:
            - { name: 'console.command', command: 'claroline:resource:check' }

    Claroline\CoreBundle\Command\DatabaseIntegrity\RightsIntegrityCheckerCommand:
        arguments:
            - '@claroline.manager.rights_manager'
        tags:
            - { name: 'console.command', command: 'claroline:rights:check' }

    Claroline\CoreBundle\Command\DatabaseIntegrity\RoleIntegrityCheckerCommand:
        arguments:
            - '@claroline.manager.role_manager'
            - '@claroline.manager.user_manager'
            - '@Claroline\AppBundle\Persistence\ObjectManager'
        tags:
            - { name: 'console.command', command: 'claroline:roles:check' }

    Claroline\CoreBundle\Command\DatabaseIntegrity\RootNodeIntegrityCheckerCommand:
        arguments:
            - '@Claroline\AppBundle\Persistence\ObjectManager'
        tags:
            - { name: 'console.command', command: 'claroline:resource_root:check' }

    Claroline\CoreBundle\Command\DatabaseIntegrity\UserIntegrityCheckerCommand:
        arguments:
            - '@claroline.manager.user_manager'
        tags:
            - { name: 'console.command', command: 'claroline:user:check' }

    Claroline\CoreBundle\Command\DatabaseIntegrity\WorkspaceCheckerCommand:
        arguments:
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@claroline.manager.workspace_manager'
            - '@doctrine.orm.entity_manager'
            - '@claroline.manager.tool_manager'
            - '@claroline.manager.organization.organization_manager'
        tags:
            - { name: 'console.command', command: 'claroline:workspace:check' }

    # Dev

    Claroline\CoreBundle\Command\Dev\DisableMaintenanceCommand:
        tags:
            - { name: 'console.command', command: 'claroline:maintenance:disable' }

    Claroline\CoreBundle\Command\Dev\EnableMaintenanceCommand:
        tags:
            - { name: 'console.command', command: 'claroline:maintenance:enable' }

    Claroline\CoreBundle\Command\Dev\PlatformInstallCommand:
        tags:
            - { name: 'console.command', command: 'claroline:install' }

    Claroline\CoreBundle\Command\Dev\PlatformUpdateCommand:
        arguments:
            - '@Claroline\CoreBundle\Library\Installation\Refresher'
            - '@Claroline\CoreBundle\Library\Installation\PlatformInstaller'
            - '@Claroline\CoreBundle\Manager\VersionManager'
            - '@Claroline\CoreBundle\Library\Configuration\PlatformConfigurationHandler'
            - '@translator'
            - '%kernel.environment%'
        tags:
            - { name: 'console.command', command: 'claroline:update' }

    Claroline\CoreBundle\Command\Dev\RefreshCommand:
        arguments:
            - '@Claroline\CoreBundle\Library\Installation\Refresher'
        tags:
            - { name: 'console.command', command: 'claroline:refresh' }

    Claroline\CoreBundle\Command\Dev\UpdateConfigCommand:
        arguments:
            - '@Claroline\CoreBundle\Library\Installation\Plugin\Installer'
        tags:
            - { name: 'console.command', command: 'claroline:update_config' }

    Claroline\CoreBundle\Command\Dev\PluginInstallCommand:
        arguments:
            - '@Claroline\CoreBundle\Library\Installation\Plugin\Installer'
        tags:
            - { name: 'console.command', command: 'claroline:plugin:install' }

    Claroline\CoreBundle\Command\Dev\PluginUninstallCommand:
        arguments:
            - '@Claroline\CoreBundle\Library\Installation\Plugin\Installer'
        tags:
            - { name: 'console.command', command: 'claroline:plugin:uninstall' }

